!function(o){var r; o.fn.mColorPicker=function(e){return r=o.extend(o.fn.mColorPicker.defaults, e), r.swatches.length < 10 && (r.swatches=o.fn.mColorPicker.defaults.swatches), o("div#mColorPicker").length < 1 && o.fn.mColorPicker.drawPicker(), o("#css_disabled_color_picker").length < 1 && o("head").prepend('<style id="css_disabled_color_picker" type="text/css">.mColorPicker[disabled] + span, .mColorPicker[disabled="disabled"] + span, .mColorPicker[disabled="true"] + span{filter:alpha(opacity=50);-moz-opacity:0.5;-webkit-opacity:0.5;-khtml-opacity: 0.5;opacity: 0.5;}</style>'), o(document).on("keyup", ".mColorPicker", function(){try{o(this).css({"background-color": o(this).val()}).css({color: o.fn.mColorPicker.textColor(o(this).css("background-color"))}).trigger("change")}catch (r){}}), o(document).on("click", ".mColorPickerTrigger", function(){o.fn.mColorPicker.colorShow(o(this).attr("id").replace("icp_", ""))}), this.each(function(){o.fn.mColorPicker.drawPickerTriggers(o(this))}), this}, o.fn.mColorPicker.currentColor=!1, o.fn.mColorPicker.currentValue=!1, o.fn.mColorPicker.color=!1, o.fn.mColorPicker.init={replace: "[type=color]", index: 0, enhancedSwatches: !0, allowTransparency: !0, checkRedraw: "DOMUpdated", liveEvents: !1, showLogo: !0}, o.fn.mColorPicker.defaults={imageFolder: "images/", swatches: ["#ffffff", "#ffff00", "#00ff00", "#00ffff", "#0000ff", "#ff00ff", "#ff0000", "#4c2b11", "#3b3b3b", "#000000"]}, o.fn.mColorPicker.liveEvents=function(){o.fn.mColorPicker.init.liveEvents=!0, o.fn.mColorPicker.init.checkRedraw && o.fn.mColorPicker.init.replace && o(document).bind(o.fn.mColorPicker.init.checkRedraw + ".mColorPicker", function(){o('input[data-mcolorpicker!="true"]').filter(function(){return "[type=color]"==o.fn.mColorPicker.init.replace ? "color"==this.getAttribute("type") : o(this).is(o.fn.mColorPicker.init.replace)}).mColorPicker()})}, o.fn.mColorPicker.drawPickerTriggers=function(e){if ("input" !=e[0].nodeName.toLowerCase()) return !1; var t=e.attr("id") || "color_" + o.fn.mColorPicker.init.index++ , i=!1; e.attr("id", t), ("hidden"==e.attr("text") || "hidden"==e.attr("data-text")) && (i=!0); var c=e.val() , l=e.width() > 0 ? e.width() : parseInt(e.css("width"), 10) , n=e.height() ? e.height() : parseInt(e.css("height"), 10) , a=e.css("float") , s="transparent"==c ? "url('" + r.imageFolder + "/grid.gif')" : "" , d=""; return o("body").append('<span id="color_work_area"></span>'), o("span#color_work_area").append(e.clone(!0)), d=o("span#color_work_area").html().replace(/type="color"/gi, "").replace(/input /gi, i ? 'input type="hidden"' : 'input type="text"'), o("span#color_work_area").html("").remove(), e.after(i ? '<span style="cursor:pointer;border:1px solid black;float:' + a + ";width:" + l + "px;height:" + n + 'px;" id="icp_' + t + '">&nbsp;</span>' : "").after(d).remove(), o("#" + t).val(c), i ? o("#icp_" + t).css({"background-color": c, "background-image": s, display: "inline-block"}).attr("class", (o("#" + t).attr("class") || "") + " mColorPickerTrigger") : o("#" + t).css({"background-color": c, "background-image": s}).css({color: o.fn.mColorPicker.textColor(o("#" + t).css("background-color"))}).after('<span style="cursor:pointer;" id="icp_' + t + '" class="mColorPickerTrigger"><img src="' + r.imageFolder + 'color.png" style="border:0;margin:0 0 0 3px" align="absmiddle"></span>').addClass("mColorPickerInput"), o("#icp_" + t).attr("data-mcolorpicker", "true"), o("#" + t).addClass("mColorPicker"), o("#" + t)}, o.fn.mColorPicker.drawPicker=function(){for (o(document.createElement("div")).attr("id", "mColorPicker").css("display", "none").html('<div id="mColorPickerWrapper"><div id="mColorPickerImg" class="mColor"></div><div id="mColorPickerImgGray" class="mColor"></div><div id="mColorPickerSwatches"><div class="mClear"></div></div><div id="mColorPickerFooter"><input type="text" size="8" id="mColorPickerInput"/></div></div>').appendTo("body"), o(document.createElement("div")).attr("id", "mColorPickerBg").css({display: "none"}).appendTo("body"), n=9; n > -1; n--) o(document.createElement("div")).attr({id: "cell" + n, "class": "mPastColor" + (n > 0 ? " mNoLeftBorder" : "")}).html("&nbsp;").prependTo("#mColorPickerSwatches"); o("#mColorPicker").css({border: "1px solid #ccc", color: "#fff", "z-index": 999998, width: "194px", height: "30px", "font-size": "12px", "font-family": "times"}), o(".mPastColor").css({height: "18px", width: "18px", border: "1px solid #000", "float": "left"}), o("#colorPreview").css({height: "50px"}), o(".mNoLeftBorder").css({"border-left": 0}), o(".mClear").css({clear: "both"}), o("#mColorPickerWrapper").css({position: "relative", border: "solid 1px gray", "z-index": 999999}), o("#mColorPickerImg").css({height: "128px", width: "192px", border: 0, cursor: "crosshair", "background-image": "url('" + r.imageFolder + "colorpicker.png')"}), o("#mColorPickerImgGray").css({height: "8px", width: "192px", border: 0, cursor: "crosshair", "background-image": "url('" + r.imageFolder + "graybar.jpg')"}), o("#mColorPickerInput").css({border: "solid 1px gray", "font-size": "10pt", margin: "3px", width: "80px"}), o("#mColorPickerImgGrid").css({border: 0, height: "20px", width: "20px", "vertical-align": "text-bottom"}), o("#mColorPickerSwatches").css({"border-right": "1px solid #000"}), o("#mColorPickerFooter").css({"background-image": "url('" + r.imageFolder + "grid.gif')", position: "relative", height: "26px"}), o.fn.mColorPicker.init.allowTransparency && o("#mColorPickerFooter").prepend('<span id="mColorPickerTransparent" class="mColor" style="font-size:16px;color:#000;padding-right:30px;padding-top:3px;cursor:pointer;overflow:hidden;float:right;">transparent</span>'), o.fn.mColorPicker.init.showLogo && o("#mColorPickerFooter").prepend('<a href="http://meta100.com/" title="Meta100 - Designing Fun" alt="Meta100 - Designing Fun" style="float:right;" target="_blank"><img src="' + r.imageFolder + 'meta100.png" title="Meta100 - Designing Fun" alt="Meta100 - Designing Fun" style="border:0;border-left:1px solid #aaa;right:0;position:absolute;"/></a>'), o("#mColorPickerBg").click(o.fn.mColorPicker.closePicker); var e=o.fn.mColorPicker.getCookie("swatches") , t=0; "string"==typeof e && (e=e.split("||")), (null==e || o.fn.mColorPicker.init.enhancedSwatches || e.length < 10) && (e=r.swatches), o(".mPastColor").each(function(){o(this).css("background-color", e[t++].toLowerCase())})}, o.fn.mColorPicker.closePicker=function(){o(".mColor, .mPastColor, #mColorPickerInput, #mColorPickerWrapper").unbind(), o("#mColorPickerBg").hide(), o("#mColorPicker").fadeOut()}, o.fn.mColorPicker.colorShow=function(r){var e=o("#icp_" + r) , t=e.offset() , i=o("#" + r) , c=i.attr("data-hex") || i.attr("hex") , l=t.top + e.outerHeight() , n=t.left , a=o(document) , s=o("#mColorPicker"); if (i.attr("disabled")) return !1; l + s.height() > a.height() && (l=t.top - s.height()), n + s.width() > a.width() && (n=t.left - s.width() + e.outerWidth()), s.css({top: l + "px", left: n + "px", position: "absolute"}).fadeIn("fast"), o("#mColorPickerBg").css({"z-index": 999990, background: "black", opacity: .01, position: "absolute", top: 0, left: 0, width: parseInt(a.width(), 10) + "px", height: parseInt(a.height(), 10) + "px"}).show(); var d=i.val(); o("#colorPreview span").text(d), o("#colorPreview").css("background", d), o("#color").val(d), o.fn.mColorPicker.currentColor=o("#" + r).attr("data-text") ? e.css("background-color") : i.css("background-color"), "true"==c && (o.fn.mColorPicker.currentColor=o.fn.mColorPicker.RGBtoHex(o.fn.mColorPicker.currentColor)), o("#mColorPickerInput").val(o.fn.mColorPicker.currentColor), o(".mColor, .mPastColor").bind("mousemove", function(e){var t=o(this).offset(); o.fn.mColorPicker.color=o(this).css("background-color"), o(this).hasClass("mPastColor") && "true"==c ? o.fn.mColorPicker.color=o.fn.mColorPicker.RGBtoHex(o.fn.mColorPicker.color) : o(this).hasClass("mPastColor") && "true" !=c ? o.fn.mColorPicker.color=o.fn.mColorPicker.hexToRGB(o.fn.mColorPicker.color) : "mColorPickerTransparent"==o(this).attr("id") ? o.fn.mColorPicker.color="transparent" : o(this).hasClass("mPastColor") || (o.fn.mColorPicker.color=o.fn.mColorPicker.whichColor(e.pageX - t.left, e.pageY - t.top + ("mColorPickerImgGray"==o(this).attr("id") ? 128 : 0), c)), o.fn.mColorPicker.setInputColor(r, o.fn.mColorPicker.color)}).click(function(){o.fn.mColorPicker.colorPicked(r)}), o("#mColorPickerInput").bind("keyup", function(e){try{o.fn.mColorPicker.color=o("#mColorPickerInput").val(), o.fn.mColorPicker.setInputColor(r, o.fn.mColorPicker.color), 13==e.which && o.fn.mColorPicker.colorPicked(r)}catch (t){}}).bind("blur", function(){o.fn.mColorPicker.setInputColor(r, o.fn.mColorPicker.currentColor)}), o("#mColorPickerWrapper").bind("mouseleave", function(){o.fn.mColorPicker.setInputColor(r, o.fn.mColorPicker.currentColor)})}, o.fn.mColorPicker.setInputColor=function(e, t){var i="transparent"==t ? "url('" + r.imageFolder + "grid.gif')" : "" , c=o.fn.mColorPicker.textColor(t); (o("#" + e).attr("data-text") || o("#" + e).attr("text")) && o("#icp_" + e).css({"background-color": t, "background-image": i}), o("#" + e).val(t).css({"background-color": t, "background-image": i, color: c}).trigger('change'), o("#mColorPickerInput").val(t)}, o.fn.mColorPicker.textColor=function(r){return "undefined"==typeof r || "transparent"==r ? "black" : (r=o.fn.mColorPicker.RGBtoHex(r), parseInt(r.substr(1, 2), 16) + parseInt(r.substr(3, 2), 16) + parseInt(r.substr(5, 2), 16) < 400 ? "white" : "black")}, o.fn.mColorPicker.setCookie=function(o, r, e){var t=o + "=" + escape(r) , i=new Date; i.setDate(i.getDate() + e), t +="; expires=" + i.toGMTString(), document.cookie=t}, o.fn.mColorPicker.getCookie=function(o){var r=document.cookie.match("(^|;) ?" + o + "=([^;]*)(;|$)"); return r ? unescape(r[2]) : null}, o.fn.mColorPicker.colorPicked=function(r){o.fn.mColorPicker.closePicker(), o.fn.mColorPicker.init.enhancedSwatches && o.fn.mColorPicker.addToSwatch(), o("#" + r).trigger("colorpicked").change()}, o.fn.mColorPicker.addToSwatch=function(r){var e=[]; i=0, "string"==typeof r && (o.fn.mColorPicker.color=r.toLowerCase()), o.fn.mColorPicker.currentValue=o.fn.mColorPicker.currentColor=o.fn.mColorPicker.color, "transparent" !=o.fn.mColorPicker.color && (e[0]=o.fn.mColorPicker.color.toLowerCase()), o(".mPastColor").each(function(){o.fn.mColorPicker.color=o(this).css("background-color").toLowerCase(), o.fn.mColorPicker.color !=e[0] && o.fn.mColorPicker.RGBtoHex(o.fn.mColorPicker.color) !=e[0] && o.fn.mColorPicker.hexToRGB(o.fn.mColorPicker.color) !=e[0] && e.length < 10 && (e[e.length]=o.fn.mColorPicker.color), o(this).css("background-color", e[i++])}), o.fn.mColorPicker.init.enhancedSwatches && o.fn.mColorPicker.setCookie("swatches", e.join("||"), 365)}, o.fn.mColorPicker.whichColor=function(o, r, e){var t=colorG=colorB=255; return 32 > o ? (colorG=8 * o, colorB=0) : 64 > o ? (t=256 - 8 * (o - 32), colorB=0) : 96 > o ? (t=0, colorB=8 * (o - 64)) : 128 > o ? (t=0, colorG=256 - 8 * (o - 96)) : 160 > o ? (t=8 * (o - 128), colorG=0) : (colorG=0, colorB=256 - 8 * (o - 160)), 64 > r ? (t +=(256 - t) * (64 - r) / 64, colorG +=(256 - colorG) * (64 - r) / 64, colorB +=(256 - colorB) * (64 - r) / 64) : 128 >=r ? (t -=t * (r - 64) / 64, colorG -=colorG * (r - 64) / 64, colorB -=colorB * (r - 64) / 64) : r > 128 && (t=colorG=colorB=256 - o / 192 * 256), t=Math.round(Math.min(t, 255)), colorG=Math.round(Math.min(colorG, 255)), colorB=Math.round(Math.min(colorB, 255)), "true"==e ? (t=t.toString(16), colorG=colorG.toString(16), colorB=colorB.toString(16), t.length < 2 && (t=0 + t), colorG.length < 2 && (colorG=0 + colorG), colorB.length < 2 && (colorB=0 + colorB), "#" + t + colorG + colorB) : "rgb(" + t + ", " + colorG + ", " + colorB + ")"}, o.fn.mColorPicker.RGBtoHex=function(o){if (o=o.toLowerCase(), "undefined"==typeof o) return ""; if (o.indexOf("#") > -1 && o.length > 6) return o; if (o.indexOf("rgb") < 0) return o; if (o.indexOf("#") > -1) return "#" + o.substr(1, 1) + o.substr(1, 1) + o.substr(2, 1) + o.substr(2, 1) + o.substr(3, 1) + o.substr(3, 1); var r=["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f"] , e="#" , t=0; o=o.replace(/[^0-9,]/g, "").split(","); for (var i=0; i < o.length; i++) t=Math.floor(o[i] / 16), e +=r[t] + r[o[i] - 16 * t]; return e}, o.fn.mColorPicker.hexToRGB=function(o){if (o=o.toLowerCase(), "undefined"==typeof o) return ""; if (o.indexOf("rgb") > -1) return o; if (o.indexOf("#") < 0) return o; var r=o.replace("#", ""); return r.length < 6 && (r=r.substr(0, 1) + r.substr(0, 1) + r.substr(1, 1) + r.substr(1, 1) + r.substr(2, 1) + r.substr(2, 1)), "rgb(" + parseInt(r.substr(0, 2), 16) + ", " + parseInt(r.substr(2, 2), 16) + ", " + parseInt(r.substr(4, 2), 16) + ")"}, o(document).ready(function(){o.fn.mColorPicker.init.replace && (o('input[data-mcolorpicker!="true"]').filter(function(){return "[type=color]"==o.fn.mColorPicker.init.replace ? "color"==this.getAttribute("type") : o(this).is(o.fn.mColorPicker.init.replace)}).mColorPicker(), o.fn.mColorPicker.liveEvents())})}(jQuery);